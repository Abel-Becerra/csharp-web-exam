@model IEnumerable<csharp_web_exam.Models.CategoryViewModel>

@{
    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["Error"]
    </div>
}

<p>
    @Html.ActionLink("Create New Category", "Create", null, new { @class = "btn btn-primary" })
</p>

@if (Model != null && Model.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@item.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@(item.UpdatedAt.HasValue ? item.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm") : "-")</td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-xs" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info">
        <strong>No categories found.</strong> Create a new category to get started.
    </div>
}
