@model csharp_web_exam.Models.ProductListViewModel

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["Error"]
    </div>
}

<p>
    @Html.ActionLink("Create New Product", "Create", null, new { @class = "btn btn-primary" })
</p>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">Search and Filter</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Index", "Products", FormMethod.Get, new { @class = "form-inline" }))
        {
            <div class="form-group">
                <label for="search">Search:</label>
                <input type="text" name="search" value="@Model.SearchTerm" class="form-control" placeholder="Product name..." />
            </div>
            
            <div class="form-group">
                <label for="categoryId">Category:</label>
                <select name="categoryId" class="form-control">
                    <option value="">All Categories</option>
                    @if (Model.Categories != null)
                    {
                        foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id" @(Model.CategoryId == category.Id ? "selected" : "")>@category.Name</option>
                        }
                    }
                </select>
            </div>
            
            <div class="form-group">
                <label for="sortBy">Sort By:</label>
                <select name="sortBy" class="form-control">
                    <option value="">Default</option>
                    <option value="name" @(Model.SortBy == "name" ? "selected" : "")>Name</option>
                    <option value="price" @(Model.SortBy == "price" ? "selected" : "")>Price</option>
                    <option value="category" @(Model.SortBy == "category" ? "selected" : "")>Category</option>
                </select>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" name="sortDesc" value="true" @(Model.SortDescending ? "checked" : "") /> Descending
                </label>
            </div>
            
            <button type="submit" class="btn btn-default">Filter</button>
            <a href="@Url.Action("Index")" class="btn btn-link">Clear</a>
        }
    </div>
</div>

@if (Model.Products != null && Model.Products.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Category</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                    <td>@item.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-xs" })
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-xs" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-xs" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col-md-6">
            <p>Showing @Model.Products.Count of @Model.TotalCount products</p>
        </div>
        <div class="col-md-6">
            <nav aria-label="Page navigation">
                <ul class="pagination pull-right">
                    @if (Model.Page > 1)
                    {
                        <li>
                            <a href="@Url.Action("Index", new { page = Model.Page - 1, pageSize = Model.PageSize, search = Model.SearchTerm, categoryId = Model.CategoryId, sortBy = Model.SortBy, sortDesc = Model.SortDescending })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.Page - 2); i <= Math.Min(Model.TotalPages, Model.Page + 2); i++)
                    {
                        <li class="@(i == Model.Page ? "active" : "")">
                            <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, search = Model.SearchTerm, categoryId = Model.CategoryId, sortBy = Model.SortBy, sortDesc = Model.SortDescending })">@i</a>
                        </li>
                    }

                    @if (Model.Page < Model.TotalPages)
                    {
                        <li>
                            <a href="@Url.Action("Index", new { page = Model.Page + 1, pageSize = Model.PageSize, search = Model.SearchTerm, categoryId = Model.CategoryId, sortBy = Model.SortBy, sortDesc = Model.SortDescending })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}
else
{
    <div class="alert alert-info">
        <strong>No products found.</strong> Try adjusting your search criteria or create a new product.
    </div>
}
